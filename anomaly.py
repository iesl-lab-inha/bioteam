# -*- coding: utf-8 -*-
"""anomaly.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14otIYV4K2Q9JzALBo1ezvgLpyQXtqYoG
"""

!pip install pycaret[full]

from pycaret.anomaly import *
import pickle
import pandas as pd
import gzip
with gzip.open('./normal_area.pkl', 'rb') as f:
    data = pickle.load(f)

ind=111131                                                                      #[111131, 131384, 221192, 422132, 111241
air='NOX'                                                                      #['PM10', 'PM25', 'O3', 'CO', 'SO2', 'NO2', 'NO', 'NOX']

df = data[ind]                                                                  # 공간 인덱스마다 데이터 가져오기

df.drop(['YYYYMMDDHH','AREA_INDEX', 'PM10_RFLAG',
         'PM25_RFLAG','O3_RFLAG','CO_RFLAG','SO2_RFLAG',
         'NO2_RFLAG','NO_RFLAG','NOX_RFLAG'],axis=1,inplace=True)

df.set_index('TIME_INDEX', drop=True, inplace=True)                             #RFLAG 다 지우고 시간인덱스로 인덱스 설정

df_tmp = pd.DataFrame(df[air])                                                  #각각 데이터데에 대하여 이상감지를 해야하므로 각 데이터마다 설정

s = setup(df_tmp, session_id = 123)                                             #pycaret 사용

iforest = create_model('iforest', fraction = 0.1)
iforest_results = assign_model(iforest)

import plotly.graph_objects as go
import plotly.express as px
# plot value on y-axis and date on x-axis
fig = px.line(iforest_results, x=iforest_results.index, y=air, 
              title='NYC TAXI TRIPS - UNSUPERVISED ANOMALY DETECTION', 
              template = 'plotly_dark')
# create list of outlier_dates
outlier_dates = iforest_results[iforest_results['Anomaly'] == 1].index
# obtain y value of anomalies to plot
y_values = [iforest_results.loc[i][air] for i in outlier_dates]
fig.add_trace(go.Scatter(x=outlier_dates, y=y_values, mode = 'markers', 
                name = 'Anomaly', 
                marker=dict(color='red',size=10)))
        
fig.show()

df_prcess = iforest_results

i = 0                                                                           #non-anomaly 데이터 평균 구하기
sum = 0
for idx, row in df_prcess.iterrows():
  if(row[1]!=1):
      i+=1
      sum+=row[0]

avg = round(sum/i,4)

df_prcess.loc[(df_prcess[air]>avg*2) 
            & (df_prcess['Anomaly'] == 1),air] = avg                      #전처리

import plotly.graph_objects as go
import plotly.express as px
# plot value on y-axis and date on x-axis
fig = px.line(df_prcess, x=df_prcess.index, y=air, 
              title='NYC TAXI TRIPS - UNSUPERVISED ANOMALY DETECTION', 
              template = 'plotly_dark')
# create list of outlier_dates
outlier_dates = df_prcess[df_prcess['Anomaly'] == 1].index
# obtain y value of anomalies to plot
y_values = [df_prcess.loc[i][air] for i in outlier_dates]
fig.add_trace(go.Scatter(x=outlier_dates, y=y_values, mode = 'markers', 
                name = 'Anomaly', 
                marker=dict(color='red',size=10)))
        
fig.show()

filename=str(ind)+"_"+air+".csv"                                              #데이터값 저장
  
  iforest_results.to_csv("./"+filename)